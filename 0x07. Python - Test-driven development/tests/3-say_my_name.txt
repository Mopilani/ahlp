The ``3-say_my_name`` module
============================
Using ``say_my_name``
--------------------

Calling the function
>>> say_my_name = __import__('3-say_my_name').say_my_name

Test for two string
>>> say_my_name("John", "Smith")
My name is John Smith
>>> say_my_name("Abdoulaye", "Sadio")
My name is Abdoulaye Sadio

Test converted int
>>> say_my_name("Walter", "23")
My name is Walter 23
>>> say_my_name("27", "Sadio")
My name is 27 Sadio

Test non passed argumen
>>> say_my_name("John", Smith)
Traceback (most recent call last):
	...
NameError: name 'Smith' is not defined
>>> say_my_name(Walter, "White")
Traceback (most recent call last):
	...
NameError: name 'Walter' is not defined

Test first element is an int
>>> say_my_name(27, "Sadio")
Traceback (most recent call last):
	...
TypeError: first_name must be a string

Test second element is an int
>>> say_my_name("Walter", 3)
Traceback (most recent call last):
	...
TypeError: last_name must be a string

Test one argument
>>> say_my_name("Walter")
My name is Walter 
>>> say_my_name("Walter",)
My name is Walter 
>>> say_my_name("White")
My name is White 
>>> say_my_name("","White")
My name is  White
>>> say_my_name("John", "")
My name is John 

Test missing argument
>>> say_my_name()
Traceback (most recent call last):
	...
TypeError: say_my_name() missing 1 required positional argument: 'first_name'


Test for calling object
>>> Name = "Sadio"
>>> say_my_name('Abdoulaye', Name)
My name is Abdoulaye Sadio

Test for more than 2 arguments:
>>> say_my_name('Abdoulaye', 'Djeylani', 'Sadio')
Traceback (most recent call last):
	...
TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given

Test empty string
>>> say_my_name("")
My name is  

Test integer argument
>>> say_my_name(3)
Traceback (most recent call last):
	...
TypeError: first_name must be a string
